name: Update Preview DB

on:
  push:
    branches:
      - main

jobs:
  update-preview-db:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout code
      - uses: actions/checkout@v3

      # 2Ô∏è‚É£ Installer Supabase CLI
      - name: Install Supabase CLI
        run: |
          curl -fsSL https://cdn.jsdelivr.net/npm/supabase-cli@1.84.0/install.sh | bash
          echo "$HOME/.supabase/bin" >> $GITHUB_PATH

      # 3Ô∏è‚É£ V√©rifier si migrations/seeds ont chang√©
      - name: Check if migrations or seeds changed
        id: changes
        run: |
          echo "üëÄ Checking if migrations or seeds changed..."
          git fetch origin main
          CHANGED=$(git diff --name-only origin/main HEAD | grep -E '^(migrations/|seeds/)' || true)
          echo "changed_files=$CHANGED" >> $GITHUB_OUTPUT
          if [ -z "$CHANGED" ]; then
            echo "‚úÖ No migrations or seeds changed. Skipping DB update."
          else
            echo "üîÑ Detected changes in migrations/seeds:"
            echo "$CHANGED"
          fi

      # 4Ô∏è‚É£ Reset, push et seed DB en un seul step si changements
      - name: Reset, Push and Seed Preview DB
        if: steps.changes.outputs.changed_files != ''
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN_PREVIEW }}
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF_PREVIEW }}
        run: |
          echo "üöÆ Resetting preview DB,"
          echo "‚¨ÜÔ∏è Pushing migrations,"
          echo "üå± Seeding preview DB..."
          supabase db reset --project-ref $SUPABASE_PROJECT_REF --force
          echo "‚úÖ Preview DB updated successfully!"
